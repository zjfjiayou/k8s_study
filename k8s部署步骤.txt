设置网卡
vi /etc/sysconfig/network-scripts/ifcfg-ens33
BOOTPROTO=static
ONBOOT=yes
IPADDR=192.168.3.8
NETMASK=255.255.255.0
DNS1=202.103.24.68
DNS2=8.8.8.8

service network restart
安装vim
yum install -y yum
关闭防火墙
systemctl stop firewalld.service    #停止firewall
systemctl disable firewalld.service #禁止firewall开机启动
firewall-cmd --state                #查看防火墙状态
禁用SELINUX
setenforce 0
vim /etc/selinux/config
SELINUX=disabled
添加kubeadm源
vim /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
yum makecache
安装必要组件
yum install -y kubeadm kubectl kubelet docker
添加Docker源
vim /etc/docker/daemon.json
{
   "registry-mirrors": ["https://k1sy8ebl.mirror.aliyuncs.com"]
}
systemctl daemon-reload
systemctl restart docker
去除kubectl对swap限制
swapoff -a
vim /etc/fstab
free -m
启动kubelet
systemctl enable kubelet.service
systemctl start kubelet.service
准备镜像
vim pull.sh
#!/bin/bash
KUBE_VERSION=v1.11.2
KUBE_PAUSE_VERSION=3.1
ETCD_VERSION=3.2.18
DNS_VERSION=1.1.3
username=anjia0532
images=(
google-containers.kube-proxy-amd64:${KUBE_VERSION}
google-containers.kube-scheduler-amd64:${KUBE_VERSION}
google-containers.kube-controller-manager-amd64:${KUBE_VERSION}
google-containers.kube-apiserver-amd64:${KUBE_VERSION}
pause:${KUBE_PAUSE_VERSION}
etcd-amd64:${ETCD_VERSION}
coredns:${DNS_VERSION}
)
for image in ${images[@]}
do
  docker pull ${username}/${image}
  tmp=${image/google-containers./}
  echo ${tmp}
  docker tag ${username}/${image} k8s.gcr.io/${tmp}
  docker rmi ${username}/${image}
done
unset ARCH version images username
sh pull.sh
准备安装master
kubeadm init   --kubernetes-version=v1.11.2   --pod-network-cidr=10.244.0.0/16   --apiserver-advertise-address=xxx.xxx.xxx.xxx --token-ttl 0
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
安装Pod Network
curl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f  kube-flannel.yml
kubectl get pod --all-namespaces -o wide
